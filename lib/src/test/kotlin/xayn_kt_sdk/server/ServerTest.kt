/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package xayn_kt_sdk.server

import xayn_kt_sdk.client.Client
import xayn_kt_sdk.server.model.IngestedDocument
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertTrue

class ServerTest {
    @Test
    fun ingestDocumentsTest() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertTrue(
            classUnderTest.ingest(
                arrayOf(
                    IngestedDocument(
                        "test_a", "The world cup 2022 has started in Qatar.", mapOf(
                            "link" to "https://www.test.com",
                            "topic" to "news"
                        )
                    ),
                    IngestedDocument(
                        "test_b", "Man steps on snail and falls.", mapOf(
                            "link" to "https://www.test.com",
                            "topic" to "news"
                        )
                    ),
                    IngestedDocument(
                        "test_c", "Water is wet, according to a new international study.", mapOf(
                            "link" to "https://www.test.com",
                            "topic" to "news"
                        )
                    )
                )
            ), "ingestDocumentsTest should return 'true'"
        )
    }

    @Test
    fun getProperties() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertEquals(
            classUnderTest.getProperties("test_a"), mapOf(
                "link" to "https://www.test.com",
                "topic" to "news"
            ), "getProperties should return 'true'"
        )
    }

    @Test
    fun updateProperties() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertTrue(
            classUnderTest.updateProperties(
                "test_a", mapOf(
                    "link" to "https://www.test2.com",
                    "topic" to "update"
                )
            ), "updateProperties should return 'true'"
        )
    }

    @Test
    fun deleteProperties() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertTrue(
            classUnderTest.deleteProperties("test_a"), "deleteProperties should return 'true'"
        )
    }

    @Test
    fun deleteDocument() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertTrue(
            classUnderTest.delete("test_c"), "deleteDocument should return 'true'"
        )
    }

    @Test
    fun deleteAllDocuments() {
        val classUnderTest = Server(
            "{TOKEN}",
            "{ENDPOINT}",
            "{ENV}"
        )

        assertTrue(
            classUnderTest.deleteAll(
                arrayOf(
                    "test_a",
                    "test_b"
                )
            ), "deleteAllDocuments should return 'true'"
        )
    }
}


